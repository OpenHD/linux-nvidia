# This is a basic workflow to help you get started with Actions

name: Building Kernel For Enterprise NVIDIA AGX

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "4.9" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Preparing build
        run: |
          sudo apt install -y build-essential bc tree
          sudo gem install fpm
          wget https://publishing-ie-linaro-org.s3.amazonaws.com/releases/components/toolchain/binaries/7.3-2018.05/aarch64-linux-gnu/gcc-linaro-7.3.1-2018.05-x86_64_aarch64-linux-gnu.tar.xz
          xz *.xz
          ls -a
          mkdir kernel_out

      - name: Add OpenHD patches
        run: |
          patch -p0 < patches/imx577_20200215.patch
          rm kernel/nvidia/drivers/media/i2c/imx477.c
          rm kernel/nvidia/drivers/media/i2c/imx477_mode_tbls.h
          rm kernel/nvidia/include/media/imx477.h
          patch -p0 < patches/imx577_20200226.patch

      - name: Building Kernel
        run: |
          export CROSS_COMPILE_AARCH64_PATH=$PWD/aarch64--glibc--stable-2020.08-1
          export CROSS_COMPILE_AARCH64=$PWD/aarch64--glibc--stable-2020.08-1/bin/aarch64-buildroot-linux-gnu-
          ./nvbuild.sh -o $PWD/kernel_out

      - name: Packaging Kernel
        run: |
              mkdir -p workdir/usr/local/share/openhd/kernel/dts
              mkdir -p workdir/lib/modules/5.10.192-tegra/
              cp kernel_out/arch/arm64/boot/Image workdir/usr/local/share/openhd/kernel/kernel.img
              cp -r kernel_out/arch/arm64/boot/dts/nvidia/* workdir/usr/local/share/openhd/kernel/dts/
              cp -r kernel_out/openhd/* workdir/
              VERSION="5.10-$(date -d '+1 hour' +'%m-%d-%Y--%H-%M-%S')"
              fpm -a arm64 -s dir -t deb -n openhd-linux-nvidia -v "$VERSION" -C workdir -p openhd-linux-nvidia_VERSION_ARCH.deb
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.event.repository.name }}
          path: |
            *.deb
